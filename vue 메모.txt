230221 vue1
230222 vue2


//install
npm install -g @vue/cli
vue create 프로젝트명
y, vue3 선택

//실행
npm run serve 후
http://localhost:8080/으로 이동

//주의 사항
- 프로젝트명은 only 소문자
- 컴포넌트명은 multiple words 여야 함(camelCase나 -로 구분)


//기본 구조
<template>
  html 태그
</template>

<script>
  모든 스크립트
</script>

<style>
  style 요소
</style>


//template
★★ template안의 태그 속성으로 script 안의 data를 직접 불러올 때 사용하는 "v-???" 명령어
( v-text, v-bind:~(생략), v-on:~(@로 줄임), v-if(아예 데이터출력 자체를 다룸), v-show(display를 다룸), v-for, v-model, v-slot  ) //~ 앞은 보통 생략하거나 @로 줄인다.
* v-bind: ~ 는 일반 html에서 우리가 쓰는 속성들에 data를 사용할 때 쓰는 듯
* v-for="i in data명" :key="i" or v-for="(item,idx) in data명" :key="idx"
* v-model="data명" --> input에 사용
   ==> 기본적으로는 data에 true/false 값을 받는다.
   ==> checkbox, radio와 같이 같은 v-model을 가진 multi input들은 data에 []를 받아서 value값을 받을 수 있다.
   ==> .lazy (event 끝나고 반영), .trim (여백 없이 가져옴), .number(숫자)
* v-slot: slot이 여러개 일 때 v-slot: slot name 속성을 주고 내용을 넣으면 된다. 태그도 사용 가능.

- @onevent="$emit('함수명')" //사용자 지정 함수를 만들고 하위->상위로 전달
   => 다른 컴포넌트에서 @함수명으로 사용 가능
- text 자리에 state를 활용하려면 {{ }}로 감싼다.
- <transition-group name="" tag="원래 태그"></transition-group>  //원래 태그에 transition을 걸기 위함


//script
/* script 안의 어떤 요소에서든  data를 사용하려면 this.를 붙이기 */
export default {
  name: "App", //현재 파일명
  methods: {
    함수명() {
      this.data명을 어떻게 할지
      - this.$emit('함수명', 값);  //해당 함수에 값을 (인자로) 전달하면서 @함수를 상위요소로 전달한다.
    }
  },
  data() {  //useState 역할
    return{
      state ...
    }
  },
  computed: { //data를 이용한 계산 시 사용, 함수들이 항상 값 반환, 내부 property 변경 시 실행

  },
  created() {  //모든 method, computed 등을 인식한 후 호출됨. created는 data와 events가 활성화되어 접근할 수 있지만 템플릿과 DOM은 마운트 및 렌더링되지 않은 상태  --> 주로 데이터 초기화 선언에 사용됨, 부모-자식 순 실행
    ...
  },
  mounted() {  //data, component까지 출력 후 최종 실행. 자식-부모 순 실행  --> 비동기 호출에 사용됨
    ...
  },
  components:  {
     import 한 component명
  },
}


//component
1) 외부 컴포넌트
- components 폴더에 .vue 파일 제작,
- 안에 똑같이 template, script, style를 만드는데 script 안에 export default에 Component의 이름과 props를 지정한다.
export default {
  name: "컴포넌트명",
  props: {},
};
- App.vue 에서 불러오기 -> import 컴포넌트명 from '경로';
- script의 components에 컴포넌트명 적기
* 만약 App에서 template 안에 component를 사용할 때 적힐 내용을 바꾸고 싶다면, component.vue 파일에서 내용 부분에 <slot></slot>을 넣어준다.

2) 내부 컴포넌트
- script안에 component 변수 선언, template 속성에 태그와 내용을 적는다.
- script안의 component에 컴포넌트명: 컴포넌트변수명 적기


//router
- npm i vue-router@4
- src/router/index.js 생성  -> component 호출, routes
- main.js에 import router, App.use(router)
- App.vue에 <router-view></router-view> 해서 사용